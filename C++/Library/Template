#define _GLIBCXX_DEBUG
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
#define endl "\n"
#define REP(i, s, n) for (int i = (s); i < (int)(n); i++)
#define ALL(v) v.begin(), v.end()
#define CHECK(a) cout << #a << " " << a << endl;
#define CHECK_VEC(V) REP (i, 0, V.size()) cout << i << " " << V[i] << endl;
const int INF = 1e9;
const ll LINF = 1e18;
const ll MOD = (ll)1e9 + 7LL;
const vector<int> dx = {0, 1, 0, -1, 0, 1, -1, 1, -1};
const vector<int> dy = {0, 0, 1, 0, -1, 1, 1, -1, -1};
template<class T> bool CHMIN(T& a, T b){ if (a > b){ a = b; return true; } return false; }
template<class T> bool CHMAX(T& a, T b){ if (a < b){ a = b; return true; } return false; }
struct Edge{ int to; ll cost; Edge(int to, ll cost) : to(to), cost(cost) {} };
using Graph = vector<vector<int>>;

void Main () {
    
}

int main () {
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    cout << fixed << setprecision(15);
    //int n; cin >> n; while(n--)
    Main();
}
