#define ALL(v) v.begin(), v.end()
vector<> V;

//要素数を変更する
V.resize(N);

//配列を出力
//型をその時ごとに変える、空白を出力するならそれもつけ足す
void VECOUT1 (vector<int> &V) {
    for (auto v : V) cout << v;
    cout << endl;
}

//二次元配列を出力
//型をその時ごとに変える、空白を出力するならそれもつけ足す
void VECOUT2 (vector<vector<int>> &VV) {
    for (auto V : VV) {
        for (auto v : V) cout << v;
        cout << endl;
    }
}

//最大値, 最小値 多次元配列では使えない
*max_element(ALL(V))
*min_element(ALL(V))

//総和 int, ll　多次元配列では使えない
// 0の部分が初期値になり、型もそこで決定される、1などにする場合は総和＋1が出力される
accumulate(ALL(V), 0)
accumulate(ALL(V), 0LL)

//順列の全列挙　O(N!)
sort(ALL(V));
do{
    // vに対する処理
}while(next_permutation(ALL(V)));

//同じ要素を削除、ソートしない場合は隣接する重複している要素しか削除されない
sort(ALL(V));
V.erase(unique(ALL(V)), V.end());

//配列内がpairの時
for(auto [a, b] : T) {
    // aがfirst、bがsecondで要素にアクセスできる
}
